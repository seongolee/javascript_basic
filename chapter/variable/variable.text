* let
 - ES6부터 추가되었습니다.

* var
 - hoisting 이 발생합니다.
 - 전역변수로만 사용할 수 있다.

* block scope
 - { } 안에 정의
 - ex)
 let globalName = 'global name'; // global variable

 {
    let name = 'name';
    console.log(name);
 }

* constant
 - 변수를 선언과 동시에 초기화한 값을 사용합니다. 수정 불가능
 - Immutable dataType
 - 보안상의 이유로 강점이 있습니다.
 - thread safety : 다양한 쓰레드들이 동시에 접근해서 사용할때 값을 변경하지 않기떄문에 안전합니다.

* types
 - primitive, single item: number, string, boolean, null, undefined, symbol
 - object, box container
 - function, first-class function : 이프로그래밍 언어에서는 function도 변수에 할당이 가능하고,
   함수의 인자로 전달이 가능하다는것을 뜻합니다.

* number
 - const infinity = 1 / 0; // Infinity
 - const negativeInfinity = -1 / 0; // -Infinity
 - const nAn = 'not a number' / 2; // NaN
 - bigInt: 숫자뒤에 n; 을 붙여서 사용할 수 있습니다. 사용할 때 주의할점은 웹이 지원하는지 확인을 해야합니다.

* string
 - character 문자와 구분없이 string 타입 하나만 존재합니다.
 - template literals을 사용할 수 있습니다.

* boolean
 - false: 0, null, undefined, NaN, ''
 - true: any other value

* null
 - 변수에 비어있는 값을 지정하는 경우입니다.

* undefined
 - 변수는 선언되었지 값이 초기화가 되어있지 않은 경우입니다.

* symbol
 - 동일한 string으로 작성해도 다른 symbol로 만들어집니다.
 - 고유한 식별자를 만들때 사용할 수 있습니다.
 - Symbol.for('id') 와 같이 사용하면 주어진 스트링에 맞게 symbol을 만들수 있습니다.
 - Symbol을 사용한 경우 출력할시 description을 붙여 주어야 합니다.
 ex) const symbol = Symbol('id');
 console.log(symbol.description

* Dynamic typing
 - 변수를 선언할 때 변수의 타입이 정해져있지 않고 실행될 때, 변수안에 들어있는 값으로 타입을 지정하는 것을 말합니다.
